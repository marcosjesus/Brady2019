//www.mundodelphi.com.br

unit Login;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs, dxRibbonForm,
  StdCtrls, Buttons, Mask,  ExtCtrls,  dbTables, Db,
  dxSkinsCore, dxSkinsDefaultPainters, cxLookAndFeels, dxSkinsForm , cxControls,
  dxSkinscxPCPainter, cxPC, cxContainer, cxEdit, cxLabel, Menus,
  cxLookAndFeelPainters, cxButtons, cxGraphics, dxSkinBlack, dxSkinBlue,
  dxSkinMoneyTwins, dxSkinOffice2007Black, dxSkinOffice2007Blue,
  dxSkinOffice2010Black, dxSkinOffice2010Blue, FMTBcd, SqlExpr, dxSkinCaramel,
  dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide, dxSkinFoggy, dxSkinGlassOceans,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Silver, dxSkinPumpkin, dxSkinSeven,
  dxSkinSharp, dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinValentine, dxSkinXmas2008Blue, dxSkinBlueprint,
  dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinHighContrast,
  dxSkinMetropolis, dxSkinMetropolisDark, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinSevenClassic,
  dxSkinSharpPlus, dxSkinTheAsphaltWorld, dxSkinVS2010, dxSkinWhiteprint,
  dxBarBuiltInMenu, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Global;

type
  TFrmLogin = class(TdxRibbonForm)
    cxPage: TcxPageControl;
    cxLogin: TcxTabSheet;
    cxAltera: TcxTabSheet;
    EdiUsuNome: TEdit;
    EdiSenha: TMaskEdit;
    EdiSAtual: TMaskEdit;
    EdiSNova: TMaskEdit;
    EdiSConf: TMaskEdit;
    cxLabel2: TcxLabel;
    cxLabel1: TcxLabel;
    butOk: TcxButton;
    butCancel: TcxButton;
    btnOKSenha: TcxButton;
    cxButton2: TcxButton;
    cxLabel3: TcxLabel;
    cxLabel4: TcxLabel;
    cxLabel5: TcxLabel;
    cxLabel6: TcxLabel;
    FQ_Auxiliar: TFDQuery;
    procedure EdiUsuarioExit(Sender: TObject);
    procedure ButOkClick(Sender: TObject);
    procedure btnOkSenhaClick(Sender: TObject);
    procedure EdiSenhaKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
    { Private declarations }
 //   Tab : TSQLTableClass ;
    AlteraSenha : String;
  public
    { Public declarations }
  end;

var
  FrmLogin: TFrmLogin;

implementation

{$R *.DFM}

uses udmDados;

//Uses    Global, MensFun, Constantes, TestFun, DBConect ;

procedure TFrmLogin.EdiUsuarioExit(Sender: TObject);
begin
 { EdiUsuNome.Text := Tab.SeekGet('USUARIOS','CodUsuario',[EdiUsuario.Text],'Nome',True) ;

  GFilial     := Tab.SeekGet('USUARIOS','CodUsuario',[EdiUsuario.Text],'Filial',False) ;
  GVendedor   := Tab.SeekGet('USUARIOS','CodUsuario',[EdiUsuario.Text],'CodVendedor',False) ;
  GSenha      := Tab.SeekGet('USUARIOS','CodUsuario',[EdiUsuario.Text],'Senha',False) ;
  AlteraSenha := Tab.SeekGet('USUARIOS','CodUsuario',[EdiUsuario.Text],'Altera',False) ;
  }
end;

procedure TFrmLogin.ButOkClick(Sender: TObject);

begin

   If ( EdiUsuNome.Text = '' ) Then
   Begin
       Application.MessageBox( 'Informe o Nome do Usuário', 'AppXML',  MB_ICONINFORMATION+MB_OK );
       EdiUsuNome.SetFocus ;
       Exit ;
   End ;

   FQ_Auxiliar.Close;
   FQ_Auxiliar.SQL.Clear;
   FQ_Auxiliar.SQL.Add('Select ID_Usuarios, Nome, Senha From Usuarios');
   FQ_Auxiliar.SQL.Add('Where Nome = :Nome and Senha = :Senha');
   FQ_Auxiliar.Params.ParamByName('Nome').AsString  := EdiUsuNome.Text;
   FQ_Auxiliar.Params.ParamByName('Senha').AsString := EdiSenha.Text;
   FQ_Auxiliar.Open;

   if  FQ_Auxiliar.IsEmpty then
   begin
       Application.MessageBox( 'Usuario não encontrado.', 'AppXML', MB_ICONINFORMATION+MB_OK );
       Exit;
   end;


   DB_Conect.GUsuario := EdiUsuNome.Text ;
   Glob_FillPerfil(FQ_Auxiliar.FieldByName('ID_USUARIOS').AsString) ;

   {
   GNome    := EdiUsuNome.Text ;



   GUsuFil := '(';
   QUsuFil := Tab.ExecSqlSel('Select CodFilial from UsuarioXFilial where CodUsuario = ''' + GUsuario + '''');
   while not QUsuFil.EOF do begin
     if GUsuFil = '(' then
        GUsuFil := GUsuFil + '''' + QUsuFil.FieldByName('CodFilial').AsString + ''''
     else
        GUsuFil := GUsuFil + ',''' + QUsuFil.FieldByName('CodFilial').AsString + '''';

     QUsuFil.Next;
   end;

   GUsuFil := GUsuFil + ')';

   if GUsuFil = '()' then
      Mens_MensInf('GUsuFil sem Filiais');


   if GFilial = '' then
     GFilial     := Tab.SeekGet('USUARIOS','CodUsuario',[EdiUsuario.Text],'Filial',False) ;

   //003 - Inicio
   if GFilial <> ''  then
   begin
     GRegimeTrib := Tab.SeekGet('FILIAL','CodFilial',[GFilial],'Regime',False);
     GFilialUF   := Tab.SeekGet('FILIAL','CodFilial',[GFilial],'Estado',False);
   end;

   //003 - Fim


   If ( Not GParFin.Select() ) Then
       Exit ;
       }

   ModalResult := mrOk ;
end;

procedure TFrmLogin.btnOkSenhaClick(Sender: TObject);
Var
SNova : Integer;
begin
{
     if EdiSAtual.Text <> GSenha then
       Begin
         Mens_MensInf('A Senha atual não coincide com a senha digitada anteriormente !');
         EdiSAtual.SetFocus;
         Exit;
       end;

     if ( Test_IsEmptyStr(EdiSNova.Text) )  then
       Begin
         Mens_MensInf('A Nova Senha Não Informada!');
         EdiSNova.SetFocus;
         Exit;
       end;

     if ( Test_IsEmptyStr(EdiSConf.Text) )  then
       Begin
         Mens_MensInf('A Confirmação de Senha Não Informado!');
         EdiSConf.SetFocus;
         Exit;
       end;

     if EdiSNova.Text <> EdiSConf.Text then
       Begin
         Mens_MensInf('A Nova senha não coincide com a Confirmação ! Favor digite novamente.');
         EdiSNova.Text := '';
         EdiSConf.Text := '';
         EdiSNova.SetFocus;
         Exit;
       end;


    qryAux.Close;
    qryAux.Sql.Clear;
    qryAux.Sql.Add('update Usuarios set Senha = ''' + EdiSNova.Text + ''', Altera = ''0'' where CodUsuario = ''' + EdiUsuario.Text + '''' );
    try
      qryAux.ExecSQL;
    except
      Mens_MensErro('Erro Alterando Senha!' );
      Exit;
    end;

   Mens_MensInf('Senha Alterada Com Sucesso!');
    
   cxPage.ActivePage := cxLogin;
   EdiUsuarioExit(Self);
   EdiSenha.Text := GSenha;
   ButOkClick(Self);
   }
end;


procedure TFrmLogin.EdiSenhaKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = 13 then
    ButOkClick(Self);
end;

end.

